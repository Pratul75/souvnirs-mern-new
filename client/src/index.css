@import "react-toastify/dist/ReactToastify.css";
@import "react-tooltip/dist/react-tooltip.css";
@import url(https://fonts.googleapis.com/css?family=Plus+Jakarta+Sans:200,300,regular,500,600,700,800,200italic,300italic,italic,500italic,600italic,700italic,800italic);
@import url(https://fonts.googleapis.com/css?family=Work+Sans:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic);
@tailwind base;
@tailwind components;
@tailwind utilities;

/* For WebKit-based browsers (Chrome, Safari) */
::-webkit-scrollbar {
  width: 0px; /* Adjust the width as needed */
}

::-webkit-scrollbar-track {
  background-color: transparent; /* Set the background color of the track */
}

::-webkit-scrollbar-thumb {
  background-color: transparent; /* Set the color of the scrollbar thumb */
  border-radius: 10px; /* Apply rounded corners to the thumb */
  width: 0px;
}

/* For Firefox */
/* Note: Firefox currently does not support customizing the scrollbar width */

/* For Microsoft Edge and IE */
/* Note: Microsoft Edge and IE do not support customizing the scrollbar appearance */

/* For modern browsers */
/* Add vendor prefixes as needed */
/* Customize the scrollbar color */
/* Adjust the scrollbar width and other properties */
/* Example:
body {
  scrollbar-width: thin;
  scrollbar-color: #888 #f1f1f1;
}
*/

/* Styles for dropdown container */
.dropdown-container {
  background: transparent !important;
  border-radius: 10px !important;
  padding: 4.5px !important;
  border: 1px solid rgb(35, 94, 197) !important;
}

/* Styles for dropdown content */
/* .dropdown-content {
  border-radius: 10px !important;
  background: #000 !important;
} */

/* Styles for checkbox inputs inside dropdown content */
.dropdown-content input[type="checkbox"] {
  /* Your styles for checkboxes inside .dropdown-content go here */
  /* For example: */
  margin-right: 8px !important;

  background-color: #007bff !important; /* Add some space to the right of the checkbox */
  vertical-align: middle !important; /* Align the checkbox vertically with the text */
  /* Add any other styles you want for checkboxes inside .dropdown-content */
}

/* Styles for checked checkboxes inside dropdown content */
.dropdown-content input[type="checkbox"]:checked {
  /* Your styles for checked checkboxes inside .dropdown-content go here */
  /* For example: */
  background-color: #007bff !important; /* Change the background color when checked */
  border-color: #007bff !important; /* Change the border color when checked */
  /* Add any other styles you want for checked checkboxes inside .dropdown-content */
}

.chart-container {
  height: 100px;
  width: 100%;
}

html {
  scroll-behavior: smooth;
  overscroll-behavior: contain;
  overscroll-behavior-y: contain;
}

body {
  scroll-snap-type: y mandatory;
}

/* Create the bounce effect */
@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
    animation-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1.2);
  }
  40% {
    transform: translateY(-20px);
    animation-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
  }
  60% {
    transform: translateY(-10px);
    animation-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
  }
}

.scroll-element {
  /* Apply the bounce animation */
  animation: bounce 2s;

  /* Enable scroll snapping */
  scroll-snap-align: start;
}

@keyframes fadeInCard {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
.card_animation {
  animation: fadeInCard 5s forwards;
}

.ant-slider-track {
  background-color: blue;
}

/* Change the handle color */
.ant-slider-handle {
  border-color: blue;
  background-color: blue;
}

/* styles.css */
.ant-menu-horizontal > .ant-menu-item:last-child {
  border-bottom: none !important;
}

.ant-menu-horizontal > .ant-menu-item:hover {
  border-bottom: none !important;
}

.ant-menu-submenu-arrow::before {
  display: none;
}
.ant-menu-submenu-arrow::after {
  display: none;
}

/* CSS for disabling scrolling when the sidebar is open */
body.sidebar-open {
  overflow: hidden;
}

/* CSS for enabling scrolling when the sidebar is closed */
body.sidebar-closed {
  overflow: auto;
}

/* Add this to your CSS or use a CSS-in-JS library like styled-components */
.draggable-handle {
  width: 100%;
  height: 20px; /* Adjust the height as needed */
  background-color: #ddd;
  cursor: grab;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Add this CSS to your stylesheet or component styles */
.marquee-container {
  overflow: hidden;
  position: relative;
}

.marquee-content {
  white-space: nowrap;
  animation: marquee 10s linear infinite;
  transform: translateX(100%);
  transition: transform 1s linear;
}

@keyframes marquee {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}

.marquee-container:hover .marquee-content {
  animation-play-state: paused;
  transition: transform 0.3s ease-in-out;
}

.marquee-container:hover .marquee-content:hover {
  transform: translateX(100%);
  animation-play-state: running;
}

/* In your CSS file or style block */
.gradient-text {
  background-image: linear-gradient(
    to right,
    #3a0487,
    #bc03bf
  ); /* Define your gradient colors here */
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}
